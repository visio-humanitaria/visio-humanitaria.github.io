{"version":3,"sources":["../node_modules/node-nlp-rn/lib/sentiment sync","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","addEventListener","preventDefault","localStorage","getItem","setItem","JSON","stringify","ui","ostentus","target","Header","props","header","text","body","style","backgroundColor","setTimeout","document","getElementById","_id","onclick","routes","home","Menu","element","paddingBottom","option","label","historical","about","mobile","privacy","reset","Mobile","this","display","clear","Privacy","Reset","About","Historical","data","update","parse","map","d","answer","join","render","Home","elizabot","ElizaBot","typeWrite","chars","split","string","index","interval","setInterval","length","clearInterval","placeHolder","message","placeholder","chatbox","chat","form","input","name","type","submit","a","nlp","findScripture","utterance","chat_data","unshift","transform","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.15745d4e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 233;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"react-app-polyfill/stable\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport nlp from \"bontaki-engine\";\nimport ostentus from \"ostentus\";\nimport ElizaBot from \"elizabot\";\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n});\n\nif(localStorage.getItem(\"bontaki_chat_data\") === null) {\n\tlocalStorage.setItem(\"bontaki_chat_data\", JSON.stringify([]));\n}\n\nconst ui = ostentus({ target: \"root\" });\n\nfunction Header(props) {\n\tconst header = ui.text({ body: `\n# Bontaki\n\t` });\n\theader.style({ backgroundColor: \"rgba(0, 0, 0, 0)\" });\n\tsetTimeout(() => {\n\t\tdocument.getElementById(`element-${header.props._id}`).onclick = function() {\n\t\t\troutes.home();\n\t\t}\n\t}, 10);\n}\n\nfunction Menu(props) {\n\tconst element = ui.text({ body: \"\" });\n\telement.style({ paddingBottom: \"0%\" });\n\n\telement.option({ label: \"...\" }, () => {\n\t\t\n\t});\n\n\telement.option({ label: \"💧 Converse\" }, () => {\n\t\troutes.home();\n\t});\n\n\telement.option({ label: \"📕 Your Verses\" }, () => {\n\t\troutes.historical();\n\t});\n\n\telement.option({ label: \"❓ About Bontaki\" }, () => {\n\t\troutes.about();\n\t});\n\n\telement.option({ label: \"📱 Install Mobile\" }, () => {\n\t\troutes.mobile();\n\t});\n\n\telement.option({ label: \"🔒 Privacy Policy\" }, () => {\n\t\troutes.privacy();\n\t});\n\n\n\telement.option({ label: \"🔥 Reset Data\" }, () => {\n\t\troutes.reset();\n\t});\n}\n\nfunction Mobile(props) {\n    // private\n\n    const that = this;\n\n    var state = {}\n\n    function init() {\n    }\n\n\tfunction render() {\n\t\tHeader(); \n\t\tMenu();\n\t\tui.text({ body: `\n### 🍊 Android\n\t\t\nJust tap ⋮ then \"Install app...\".\n\t\t` });\n\n\t\tui.text({ body: `\n### 🍏 Ios\n\nJust tap 📤 then \"Add to Home Screen\".\n\t\t` });\n\t}\n\n\tthis.display = function() {\n\t\t// clean slate the existing interface...\n\t\tui.clear();\n\t\t// render the new interface elements...\n        render();\n\t\t// initialize state data...\n\t\tinit();\n\t}\n  \n};\n\nfunction Privacy(props) {\n    // private\n\n    const that = this;\n\n    var state = {}\n\n    function init() {\n    }\n\n\tfunction render() {\n\t\tHeader(); \n\t\tMenu();\n\t\tconst description = ui.text({ body: `\n### Privacy is Paramount.\n\nBontaki pledges to keep your data private. It remains with your device and can be \nerased at anytime through the \"Reset Data\" option.\n\t\t` });\n\n\t\t\n\t}\n\n\tthis.display = function() {\n\t\t// clean slate the existing interface...\n\t\tui.clear();\n\t\t// render the new interface elements...\n        render();\n\t\t// initialize state data...\n\t\tinit();\n\t}\n  \n};\n\nfunction Reset(props) {\n    // private\n\n    const that = this;\n\n    var state = {}\n\n    function init() {\n    }\n\n\tfunction render() {\n\t\tHeader(); \n\t\tMenu();\n\t\tconst description = ui.text({ body: `\n### Are you sure you wish to reset your data?\n\nTap the ... to clean slate the application.\n\t\t` });\n\n\t\t\n\t\tdescription.option({ label: \"DELETE DATA\" }, () => {\n\t\t\tlocalStorage.setItem(\"bontaki_chat_data\", JSON.stringify([]));\n\t\t\troutes.home();\n\t\t});\n\t}\n\n\tthis.display = function() {\n\t\t// clean slate the existing interface...\n\t\tui.clear();\n\t\t// render the new interface elements...\n        render();\n\t\t// initialize state data...\n\t\tinit();\n\t}\n  \n};\n\nfunction About(props) {\n    // private\n\n    const that = this;\n\n    var state = {}\n\n    function init() {\n    }\n\n\tfunction render() {\n\t\tHeader(); \n\t\tMenu();\n\t\tconst description = ui.text({ body: `\n### Why study scriptures?\n\nAs long as humanity could talk to one another, stories have always been told. \nThe Judeo/Christian bible is an archive of collective human thought with humanitarian aim.\n\n### What's the purpose of Bontaki?\n\nBontaki is an ongoing experiment to connect human emotional states to collective humanitarian \ncognition echoed in biblical context. Bontaki is a therapeutic tool to assist in the \nancient practice of meditation.\n\t\t` });\n\n\t\t\n\t}\n\n\tthis.display = function() {\n\t\t// clean slate the existing interface...\n\t\tui.clear();\n\t\t// render the new interface elements...\n        render();\n\t\t// initialize state data...\n\t\tinit();\n\t}\n  \n};\n\nfunction Historical(props) {\n    // private\n\n    const that = this;\n\n    var state = {}\n\n    function init() {\n\t\t// if not exists, create chatbox data array\n\t\tif(localStorage.getItem(\"bontaki_chat_data\") === null) {\n\t\t\tlocalStorage.setItem(\"bontaki_chat_data\", JSON.stringify([]));\n\t\t}\n    }\n\n\tfunction formattedChat(data) {\n\t\treturn data.map((d) => {\n\t\t\treturn `\n${d.answer}\n`;\n\t\t}).join(\"\");\n\t}\n\n\tfunction render() {\n\t\tHeader(); \n\t\tMenu();\n\n\t\tconst description = ui.text({ body: `\n### Your thoughts, your scriptures.\n\nThese are the verses unique to you. ❤️\n\t\t` });\n\n\t\tconst chatbox = ui.text({ body: `` });\n\n\t\tchatbox.update({ body: formattedChat(JSON.parse(localStorage.getItem(\"bontaki_chat_data\"))) });\n\t}\n\n\tthis.display = function() {\n\t\t// clean slate the existing interface...\n\t\tui.clear();\n\t\t// render the new interface elements...\n        render();\n\t\t// initialize state data...\n\t\tinit();\n\t}\n  \n};\n\nfunction Home(props) {\n    // private\n\n    const that = this;\n\n    var state = { elizabot: new ElizaBot() }\n\n    function init() {\n\t\t// if not exists, create chatbox data array\n\t\tif(localStorage.getItem(\"bontaki_chat_data\") === null) {\n\t\t\tlocalStorage.setItem(\"bontaki_chat_data\", JSON.stringify([]));\n\t\t}\n    }\n\n\tfunction formattedChat(data) {\n\t\treturn data[0].answer;\n\t}\n\n\tfunction typeWrite(data) {\n\t\tconst chars = data.body.split(\"\");\n\t\tvar string = \"\";\n\t\tvar index = 0;\n\t\tconst interval = setInterval(() => {\n\t\t\tstring += chars[index];\n\t\t\tdata.element.update({ body: string });\n\t\t\tindex += 1;\n\t\t\tif(index === chars.length) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}, 50);\n\t}\n\n\tfunction placeHolder(data) {\n\t\tsetTimeout(() => {\n\t\t\tconst form = document.getElementById(`form-${data.element.props._id}`);\n\t\t\tform.message.placeholder = data.message;\n\t\t}, 10);\n\t}\n\n\tfunction render() {\n\t\tHeader(); \n\t\tMenu();\n\n\t\tconst description = ui.text({ body: `\n### Speak to biblical texts as a friend.\n\nBontaki uses natural language processing to read your emotional state and reply within scriptural context.\n\t\t` });\n\n\t\tconst chatbox = ui.text({ body: `` });\n\n\t\t//chatbox.style({ maxHeight: \"200px\", overflow: \"auto\", overflowX: \"hidden\" });\n\n\t\tconst chat = ui.form();\n\n\t\tchat.input({ name: \"message\", type: \"textarea\" });\n\t\tchat.submit(async (data) => {\n\t\t\tif(data.message.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst chat_data = await nlp().findScripture({ utterance: data.message });\n\t\t\tconst update = JSON.parse(localStorage.getItem(\"bontaki_chat_data\"));\n\t\t\tupdate.unshift({ ...chat_data, utterance: data.message });\n\t\t\tlocalStorage.setItem(\"bontaki_chat_data\", JSON.stringify(update));\n\t\t\ttypeWrite({ element: chatbox, body: update[0].answer });\n\t\t\tplaceHolder({ element: chat, message: state.elizabot.transform(data.message) });\n\t\t});\n\t\t\n\t\tconst chat_data = JSON.parse(localStorage.getItem(\"bontaki_chat_data\"));\n\t\tplaceHolder({ element: chat, message: \"Hey! How are you feeling right now?\" });\n\t\tif(chat_data.length === 0) {\n\t\t\ttypeWrite({ element: chatbox, body: `\nand to make it your ambition to lead a quiet life: \nYou should mind your own business and work with your \nhands, just as we told you, so that your daily life \nmay win the respect of outsiders and so that you will \nnot be dependent on anybody.\n\t\t\t` });\n\t\t\treturn;\n\t\t}\n\t\ttypeWrite({ element: chatbox, body: chat_data[0].answer });\n\t}\n\n\tthis.display = function() {\n\t\t// clean slate the existing interface...\n\t\tui.clear();\n\t\t// render the new interface elements...\n        render();\n\t\t// initialize state data...\n\t\tinit();\n\t}\n  \n};\n\nconst routes = {\n\thome: () => { new Home().display() },\n\thistorical: () => { new Historical().display() },\n\tabout: () => { new About().display() },\n\tmobile: () => { new Mobile().display() },\n\tprivacy: () => { new Privacy().display() },\n\treset: () => { new Reset().display() }\n}\n\nroutes.home();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}